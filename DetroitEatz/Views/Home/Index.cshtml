@using DetroitEatz.Models;
@using DetroitEatz.DAL;
@using Microsoft.AspNet.Identity;
@model IEnumerable<DetroitEatz.Models.Restaurant>
@section scripts {
    @Scripts.Render("~/bundles/app")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
<head accept="text/html">
    <title></title>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
</head>

    <br />
    <br />
    <br />
    

    <link rel="stylesheet" href="~/Content/map.css" />
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places,visualization&sensor=false"></script>

    <!--Text box /search button method-->


    <input class="input-lg" type="text" id="search" placeholder="Enter a location by name" />
    <button class="btn btn-default" onclick="Tsearch()">Search</button>

    <input type="radio" name="radius" value="250" checked />250 M
    <input type="radio" name="radius" value="500" />500 M
    <input type="radio" name="radius" value="750" />750 M
    <br />
       
    <div id="map" style="align-self:center" class="md-8"></div>
    
        
    @if (User.Identity.IsAuthenticated)
    {
        <div class="col-md-12">
            <table class="table" id="favoritesList"></table>
        </div>

    }
    <div class="col-md-12">
        <table id="tbl" class="table"></table>
    </div>

    

    <div class="btn btn-success" id="toggle_traffic">Traffic</div>
    <div class="btn btn-danger" id="toggle_transit">Transit</div>
    <div class="btn btn-primary" id="toggle_bike">Biking</div>

    <!---Table for Favorites-->
    



    <!--Table for Data-->
    


<script language="JavaScript" type="text/javascript">

    //Global Restaurants list
    var Restaurants= [];
    var Favorites = [];
    //Calls api controller to return data
    $(document).ready(function () {

        //Load Table Initial Data
        $.getJSON('api/GetRestaurants/detroit/100')
            .done(function (data) { fillArray(data) })

        //Load Favorites
        var authorized = @User.Identity.IsAuthenticated.ToString().ToLower();
        if(authorized)
        {
            $.getJSON('api/GetFavorites')
            .done(function (data) { fillFavorites(data) })

        }


        //Set Up Search Button/Map
        initAutocomplete();

       
    });


    //Check if restaurant is already in favorites
    function checkFavorites(favIndex)
    {
        var r = 0;
        var isalreadyfav = 0;
        while(r < Restaurants.length)
        {
            if( Restaurants[r].PlaceID == Favorites[favIndex].PlaceID )
            {
                isalreadyfav++;
            }
            r++;
        }

        if(isalreadyfav > 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    //Fills Favorites table
    function fillFavorites(data)
    {
        Favorites = data;
        var f = 0;
        document.getElementById("favoritesList").innerHTML=
            '<tr>'        
        + '<th>Restaurant Name</th>'
        + '<th>Address</th>'
        + '<th>Phone Number</th>'
        +'</tr>'
        
        while(f < data.length)
        {
            document.getElementById("favoritesList").innerHTML +=
               
              '<td>' + data[f].RestaurantName + '<td>'
            +   '<td>' + data[f].Address + '<td>'
            +   '<td>' + data[f].PhoneNumber + '<td>'
            +   '<td> <button class="btn btn-warning" id="' + f + 'fav" value="' + f +'" onclick="RemoveFromFavorites('+f+')">Remove</button> <td>'
            f++;
        }
        document.getElementById("favoritesList").innerHTML += '</tr>';

    }

    //Uses data from api controller to fill table
    function fillArray(data) {
        Restaurants = data;
        var k = 0;
        var lon = 0;
        var lat = 0;
        navigator.geolocation.getCurrentPosition(function (pos) {
            lat = pos.coords.latitude;
            lon = pos.coords.longitude;
        });
        var myLatLng = new google.maps.LatLng(data[0].Lat, data[0].Lon);
        var map =
        {
            //getting current locations using coordinates
            //center: new google.maps.LatLng(lat,lon),
            center: myLatLng,
            zoom: 17,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map'), map);
        var infowindow = new google.maps.InfoWindow({
            map: map,
            maxWidth: 350
        });

        //Markers on map
        while (k < data.length) {
            var myLatLng = new google.maps.LatLng(data[k].Lat, data[k].Lon);

            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                icon: '/Images/iconmap.png',
                animation: google.maps.Animation.DROP
            });


            google.maps.event.addListener(marker, 'click', function () {
                infowindow.setContent(place.name);
                infowindow.open(map, this);
            });


            k++;


        }

        k = 0;

        //Fills in table data


        document.getElementById("tbl").innerHTML =
            '<tr>' +
            '<th>Restaurant Name</th>' +
            '<th>Address</th>' +
            '<th>PhoneNumber</th>' +
            '<th>PriceLevel</th>' +
            '<th>Rating</th>' +
            '<th>Website</th>' +
            '</tr>'

        while (k < data.length) {
            var isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();
            document.getElementById("tbl").innerHTML +=
            '<tr id="' + k +'row">'

            + '<td id="' + k + 'id" style="display:none">' + data[k].PlaceID + '</td>'
            + '<td id="' + k + 'n">' + data[k].Name + '</td>'
            + '<td id="' + k + 'a">' + data[k].AddressNumber + '</td>'
            + '<td id="' + k + 'pn">' + data[k].PhoneNumber + '</td>'
            + '<td id="' + k + 'pl">' + data[k].PriceLevel + '</td>'
            + '<td id="' + k + 'r">' + data[k].Rating + '</td>'
            + '<td id="' + k + 'w">' + '<a href="' + data[k].WebSite + '">' + data[k].WebSite + '</td>'
            //checkFavorites(k, function(data)
            //{
                if(isAuthenticated){
                var row =  document.getElementById(k +"row");
                var x = row.insertCell();
                x.innerHTML = "<button id ='" + k + "' class='btn btn-success' onclick='AddToFavorites(this.id)'> Add To Favorites </button>";
                }
                else
                {
                    document.getElementById("tbl").innerHTML += '</tr>';
                }
                //});
            
                
           

            k++;


        }



    }



    //Functions for Map Buttons

    //trafficLayer
    var trafficLayer = new google.maps.TrafficLayer();
    $('#toggle_traffic').click(function () {
        if (trafficLayer.getMap()) {
            trafficLayer.setMap(null);
        }
        else {
            trafficLayer.setMap(map);
        }
    });

    //transitLayer
    var transitLayer = new google.maps.TransitLayer();
    $('#toggle_transit').click(function () {
        if (transitLayer.getMap()) {
            transitLayer.setMap(null);
        }
        else {
            transitLayer.setMap(map);
        }
    });

    //bikeLayer
    var bikeLayer = new google.maps.BicyclingLayer();
    $('#toggle_bike').click(function () {
        if (bikeLayer.getMap()) {
            bikeLayer.setMap(null);
        }
        else {
            bikeLayer.setMap(map);
        }
    });

    //Search Function
    function Tsearch()
    {
        var input = $("#search").val();
        if($('input[type="radio"][value="250"]').is(':checked'))
            var rad = 250;
        else if ($('input[type="radio"][value="500"]').is(':checked'))
            var rad = 500;
        if ($('input[type="radio"][value="750"]').is(':checked'))
            var rad = 750;
        //if(input != "")
        $.getJSON("api/GetRestaurants/" + input + "/" + rad )
            .done(function (data) { fillArray(data) })

    }


    //Google search
    function initAutocomplete() {

        // Create the search box and link it to the UI element.
        var input = document.getElementById('search');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function () {
            searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function () {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            // Clear out the old markers.
            markers.forEach(function (marker) {
                marker.setMap(null);
            });
            markers = [];

            // For each place, get the icon, name and location.
            var bounds = new google.maps.LatLngBounds();
            places.forEach(function (place) {
                var icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    title: place.name,
                    position: place.geometry.location
                }));

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);
        });
    }


    //Add to favorites button
    function  AddToFavorites(buttonID)
    {
        var cleanRestaurant =
            {
                Name : Restaurants[buttonID].Name,
                PlaceID : Restaurants[buttonID].PlaceID,
                Lat : Restaurants[buttonID].Lat,
                Lon : Restaurants[buttonID].Lon,
                Phonenumber : Restaurants[buttonID].PhoneNumber,
                AddressNumber : Restaurants[buttonID].AddressNumber
            };
        //var k = cleanRestaurant.toJSON();
        $.ajax(
            {
                url:'api/AddToFavorites' ,
                type: 'POST',
                dataType: 'json',                
                contentType: 'application/json',
                data: JSON.stringify(cleanRestaurant),
                
            }).done(function(){$.getJSON('api/GetFavorites',function (data) { fillFavorites(data) } )})

        
            
       
    }


    //Remove From Favorites Button
    function RemoveFromFavorites(btnID)
    {
        var deleteFav =
            {
                UserID : Favorites[btnID].UserID,
                PlaceID: Favorites[btnID].PlaceID
            };
        //var k = cleanRestaurant.toJSON();
        $.ajax(
            {
                url:'api/RemoveFromFavorites' ,
                type: 'POST',
                dataType: 'json',                
                contentType: 'application/json',
                data: JSON.stringify(deleteFav),
                
            }).done(function(){$.getJSON('api/GetFavorites', function (data) { fillFavorites(data) })});

        
           

    }

</script>

